{ output: [],
  outputEncodings: [],
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _hasBody: true,
  _trailer: '',
  finished: false,
  socket: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1208,
     _bytesDispatched: 159,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     _paused: false,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        _connectionKey: '4:0.0.0.0:8000' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        _paused: false,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Fri Jun 21 2013 18:11:26 GMT-0400 (EDT),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Fri Jun 21 2013 18:11:27 GMT-0400 (EDT),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Object],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: [Circular] },
  connection: 
   { _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1208,
     _bytesDispatched: 159,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     _paused: false,
     server: 
      { _connections: 2,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        _connectionKey: '4:0.0.0.0:8000' },
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _idleTimeout: 120000,
     _idleNext: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        _paused: false,
        server: [Object],
        _events: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Fri Jun 21 2013 18:11:26 GMT-0400 (EDT),
        parser: [Object],
        ondata: [Function],
        onend: [Function] },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Fri Jun 21 2013 18:11:27 GMT-0400 (EDT),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Object],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: [Circular] },
  _events: { finish: [Function] } }